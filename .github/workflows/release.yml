name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build for all platforms
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        COMMIT=$(git rev-parse --short HEAD)
        BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        LDFLAGS="-X main.Version=${VERSION} -X main.Commit=${COMMIT} -X main.BuildDate=${BUILD_DATE}"

        mkdir -p dist

        # Build for macOS (darwin)
        echo "Building for macOS amd64..."
        GOOS=darwin GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/doku-darwin-amd64 ./cmd/doku

        echo "Building for macOS arm64..."
        GOOS=darwin GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o dist/doku-darwin-arm64 ./cmd/doku

        # Build for Linux
        echo "Building for Linux amd64..."
        GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/doku-linux-amd64 ./cmd/doku

        echo "Building for Linux arm64..."
        GOOS=linux GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o dist/doku-linux-arm64 ./cmd/doku

        # Build for Windows
        echo "Building for Windows amd64..."
        GOOS=windows GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/doku-windows-amd64.exe ./cmd/doku

        # Create checksums
        cd dist
        sha256sum * > checksums.txt
        cd ..

    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"* %s (%h)" --no-merges)
        else
          CHANGELOG=$(git log --pretty=format:"* %s (%h)" --no-merges ${PREVIOUS_TAG}..HEAD)
        fi

        # Save to file for release notes
        echo "$CHANGELOG" > CHANGELOG_RELEASE.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body_path: CHANGELOG_RELEASE.md
        draft: false
        prerelease: false
        files: |
          dist/doku-darwin-amd64
          dist/doku-darwin-arm64
          dist/doku-linux-amd64
          dist/doku-linux-arm64
          dist/doku-windows-amd64.exe
          dist/checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update installation instructions
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        echo "âœ… Release $VERSION created successfully!"
        echo ""
        echo "Installation instructions:"
        echo "  go install github.com/dokulabs/doku-cli/cmd/doku@$VERSION"
